{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","Fragment","username","findUser","userId","users","find","usersFromServer","App","useState","newTodos","setNewTodos","newTitle","setNewTitle","isTitleValid","setIsTitleValid","selectUserId","setSelectUserId","isSelectUserIdValid","setIsSelectUserIdValid","action","method","onSubmit","event","preventDefault","trim","length","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec2f1b94.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoWithUser } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, user, completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../react-app-env';\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <React.Fragment key={todo.id}>\n          <TodoInfo\n            todo={todo}\n          />\n        </React.Fragment>\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser, User } from './react-app-env';\n\nconst findUser = (userId: number, users: User[]) => {\n  return users.find(user => user.id === userId) || null;\n};\n\nconst todos: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId, usersFromServer),\n}));\n\nexport const App: React.FC = () => {\n  const [newTodos, setNewTodos] = useState(todos);\n  const [newTitle, setNewTitle] = useState('');\n  const [isTitleValid, setIsTitleValid] = useState(false);\n  const [selectUserId, setSelectUserId] = useState(0);\n  const [isSelectUserIdValid, setIsSelectUserIdValid] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n    setIsTitleValid(false);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectUserId(+event.target.value);\n    setIsSelectUserIdValid(false);\n  };\n\n  const reset = () => {\n    setSelectUserId(0);\n    setNewTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (newTitle.trim().length === 0) {\n      setIsTitleValid(true);\n    }\n\n    setIsSelectUserIdValid(!selectUserId);\n    const newTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n    const newTodo = {\n      id: newTodoId,\n      title: newTitle,\n      completed: false,\n      userId: selectUserId,\n      user: findUser(selectUserId, usersFromServer),\n    };\n\n    if (newTitle.trim() && selectUserId) {\n      setNewTodos(currentTodos => [...currentTodos, newTodo]);\n      reset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTitle}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {isTitleValid && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={selectUserId}\n              onChange={handleUserId}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isSelectUserIdValid && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList\n        todos={newTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}